{"version":3,"sources":["Images/bin.png","Images/add.png","contexts/taskListReducerContext.js","components/Button.js","conteners/AddTask.js","conteners/Sort.js","components/Checkbox.js","conteners/TaskRow.js","conteners/TaskList.js","contexts/AuthProviderContext.js","Images/logout.png","Images/hover.png","App.js","reportWebVitals.js","Images/lock.png","components/PublicPage.js","components/ToDo.js","components/ErrorPage.js","index.js"],"names":["TaskListReducerContext","React","createContext","grabLocalStorage","key","defaultValue","valueInLocalStorage","localStorage","getItem","length","JSON","parse","setTnitialState","args","tasks","formTask","filterCondition","taskListReducer","state","action","type","modifiedData","externalData","map","task","title","completed","isDisplayable","id","payload","holderArray","splice","buttonIndex","checkboxIndex","filter","chosenCondition","TaskListReducerContextProvider","props","storageKey","elementsSizeUnit","window","innerHeight","innerWidth","useReducer","dispatch","Provider","value","children","Button","useContext","delButtonSize","addButtonSize","isRemove","alt","className","src","deleteButtonImage","style","height","marginRight","width","float","cursor","onClick","clickFunction","addButtonImage","AddTask","fontSize","border","flex","color","onChange","e","target","preventDefault","Sort","name","Checkbox","onClickBox","checked","isChecked","transform","marginLeft","TaskRow","taskIndex","index","backgroundColor","marginTop","to","TaskList","listStyleType","textAlign","authContext","AuthProviderContext","isLogged","setIsLogged","history","useHistory","authTokens","requestAuth","email","password","a","fetch","method","headers","body","stringify","then","response","result","status","json","didWorked","includes","token","push","signIn","signOut","App","url","useState","setExternalData","useMemo","isMounted","info","fetchData","useFetch","useEffect","setItem","spanStyle","justifyContent","alignItems","display","labelStyle","whiteSpace","onMouseOver","currentTarget","hoverLogoutImage","onMouseOut","logoutImage","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","PublicPage","formInfo","setFormInfo","showError","setShowError","inputStyle","onFocus","position","top","lock","background","submit","ToDo","useParams","taskTitle","find","ErrorPage","buttonStyle","replace","ReactDOM","render","StrictMode","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.9e0e7ca1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bin.61e22baa.png\";","export default __webpack_public_path__ + \"static/media/add.8937cc99.png\";","import React, { useReducer } from \"react\";\r\nconst TaskListReducerContext = React.createContext({});\r\n\r\nfunction grabLocalStorage(key, defaultValue) {\r\n    const valueInLocalStorage = localStorage.getItem(key);\r\n    if (valueInLocalStorage !== null) {\r\n        if (valueInLocalStorage.length > 0)\r\n            return JSON.parse(valueInLocalStorage)\r\n    }\r\n    return typeof defaultValue === \"function\" ? defaultValue() : defaultValue\r\n}\r\n\r\n\r\nfunction setTnitialState(args) {\r\n    const [key, listDefaultValue] = args;\r\n    return {\r\n        tasks: grabLocalStorage(key, listDefaultValue),\r\n        formTask: \"\",\r\n        filterCondition: \"All\"\r\n    }\r\n}\r\n\r\n\r\nfunction taskListReducer(state, action) {\r\n    switch (action.type) {\r\n        case \"JOIN_EXTERNAL_DATA\": {\r\n            if (state.tasks.length === 0) {\r\n                let modifiedData = action.externalData.map(task => {\r\n                    return {\r\n                        title: task.title,\r\n                        completed: task.completed,\r\n                        isDisplayable: \"inline\",\r\n                        id: \"task\" + task.id\r\n                    }\r\n                });\r\n                return { ...state, tasks: modifiedData };\r\n            }\r\n            return { ...state }\r\n        }\r\n        case \"FIELD\":\r\n            return {\r\n                ...state,\r\n                formTask: action.payload\r\n            }\r\n        case \"SUBMIT\":\r\n            {\r\n                return {\r\n                    ...state, tasks: [...state.tasks, { title: state.formTask, completed: false, isDisplayable: \"inline\", id: `Task${state.tasks.length + 1}` }], formTask: \"\"\r\n                }\r\n            }\r\n        case \"DELETE\": {\r\n            let holderArray = [...state.tasks];\r\n            holderArray.splice(action.buttonIndex, 1)\r\n            return {\r\n                ...state, tasks: [...holderArray]\r\n            }\r\n        }\r\n        case \"CHECKBOX\": {\r\n            let holderArray = [...state.tasks];\r\n            holderArray[action.checkboxIndex].completed = !action.payload;\r\n            return {\r\n                ...state, tasks: [...holderArray]\r\n            }\r\n        }\r\n        case \"FILTER\": {\r\n            let chosenCondition = action.payload;\r\n            let filter;\r\n            if (chosenCondition === \"All\") {\r\n                filter = \"All\"\r\n            }\r\n            else if (chosenCondition === \"Done\") {\r\n                filter = true\r\n            }\r\n            else {\r\n                filter = false\r\n            }\r\n            return {\r\n                ...state, filterCondition: filter\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst TaskListReducerContextProvider = (props) => {\r\n    let storageKey = \"toDoTaskList\";\r\n    let elementsSizeUnit = window.innerHeight > window.innerWidth ? window.innerWidth / 2 : window.innerHeight / 2;\r\n    const [state, dispatch] = useReducer(taskListReducer, [storageKey, []], setTnitialState)\r\n\r\n    return (\r\n        <TaskListReducerContext.Provider value={{ state, dispatch, storageKey, elementsSizeUnit }}>\r\n            {props.children}\r\n        </TaskListReducerContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TaskListReducerContextProvider, TaskListReducerContext }","import deleteButtonImage from \"../Images/bin.png\";\r\nimport { useContext } from \"react\";\r\nimport addButtonImage from \"../Images/add.png\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\n\r\nfunction Button(props) {\r\n\r\n    let { elementsSizeUnit } = useContext(TaskListReducerContext);\r\n    let delButtonSize = elementsSizeUnit / 14;\r\n    let addButtonSize = elementsSizeUnit / 10;\r\n    if (props.isRemove) {\r\n        return (\r\n            <img alt=\"removeButton\" className=\"removeButton\" src={deleteButtonImage} style={{ height: delButtonSize,marginRight:\"1%\", width: delButtonSize, float:\"right\", cursor:\"pointer\"}} onClick={props.clickFunction}></img>\r\n        )\r\n    } else;\r\n    return (\r\n        <img alt=\"submitButton\" className=\"submitButton\" src={addButtonImage} style={{ height: addButtonSize, width: addButtonSize, cursor:\"pointer\" }} onClick={props.clickFunction}></img>\r\n    )\r\n}\r\nexport default Button;","import { useContext } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\nfunction AddTask(props) {\r\n    let { state, dispatch, storageKey, elementsSizeUnit } = useContext(TaskListReducerContext);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        dispatch({ type: \"SUBMIT\", key: storageKey })\r\n    }\r\n\r\n    function handleChange(e) {\r\n        dispatch({ type: \"FIELD\", payload: e.target.value })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <input id=\"taskInput\" style={{ fontSize: elementsSizeUnit / 18, border:\"none\", flex:\"0.8\",color:\"#1868ae\" }} type=\"text\" value={state.formTask} onChange={handleChange} />\r\n            <Button clickFunction={handleSubmit} isRemove={false} ></Button>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default AddTask;","import { useContext } from \"react\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\n\r\n\r\nfunction Sort(props) {\r\n    let { dispatch, elementsSizeUnit } = useContext(TaskListReducerContext);\r\n    function selectHandler(e) {\r\n        dispatch({ type: \"FILTER\", payload: e.target.value })\r\n    }\r\n\r\n    return (\r\n            <select id=\"optionContainer\" name=\"condition\" onChange={selectHandler} style={{ fontSize: elementsSizeUnit / 18,border:\"none\", flex:\"0.3\" }}>\r\n                <option defaultValue=\"All\" value=\"All\"> All </option>\r\n                <option value=\"Done\"> Done</option>\r\n                <option value=\"Undone\"> Undone</option>\r\n            </select>\r\n    )\r\n}\r\n\r\nexport default Sort;","import { useContext } from \"react\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\n\r\nfunction Checkbox(props) {\r\n    let { elementsSizeUnit } = useContext(TaskListReducerContext);\r\n    return <input onChange={props.onClickBox} type=\"checkbox\" checked={props.isChecked} style={{ transform: `scale(${elementsSizeUnit / 330})`,marginLeft:\"2%\" }}></input>\r\n}\r\n\r\nexport default Checkbox;","import { useContext } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\nimport Checkbox from \"../components/Checkbox\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction TaskRow(props) {\r\n    let { state, dispatch, elementsSizeUnit } = useContext(TaskListReducerContext);\r\n\r\n\r\n    function delButtonHandler(buttonIndex) {\r\n        dispatch({ type: \"DELETE\", buttonIndex: buttonIndex })\r\n    }\r\n\r\n    function checkboxHandler(index) {\r\n        dispatch({ type: \"CHECKBOX\", checkboxIndex: index, payload: state.tasks[index].completed })\r\n    }\r\n\r\n    let taskIndex = (props.index + 1 + \". \");\r\n\r\n    return (\r\n        <li className={\"task\"} id={\"task\" + props.index} style={{backgroundColor:\"white\",marginTop:\"1%\",height:elementsSizeUnit/12, width:\"110%\"}} >\r\n            <Checkbox onClickBox={() => checkboxHandler(props.index)} isChecked={state.tasks[props.index].completed}></Checkbox>\r\n      &nbsp;\r\n            <Link className=\"links\" to={`/todos/${props.task.id}`}>\r\n                <span style={{ fontSize: elementsSizeUnit / 18, marginLeft:\"1%\" }}>\r\n                <b>{taskIndex}</b>{props.task.title}\r\n            </span></Link>\r\n  &nbsp;\r\n            <Button clickFunction={() => delButtonHandler(props.index)} isRemove={true} title=\"X\"></Button>\r\n        </li>)\r\n}\r\n\r\nexport default TaskRow;","import TaskRow from \"./TaskRow\"\r\nimport { useContext } from \"react\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\nfunction TaskList() {\r\n    let { state } = useContext(TaskListReducerContext);\r\n    let tasks = state.tasks\r\n    let filterCondition = state.filterCondition\r\n    return (\r\n            <ul className=\"tasks\" style={{listStyleType:\"none\",width:\"max-content\",textAlign:\"left\",marginTop:\"2%\"}}>\r\n                {tasks.map((task, index) => {\r\n                    if (filterCondition === \"All\" || task.completed === filterCondition) {\r\n                        return (\r\n                            <TaskRow key={index} task={task} index={index} ></TaskRow>\r\n                        )\r\n                    }\r\n                    else return false;\r\n                })}\r\n            </ul>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default TaskList;","import * as React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst authContext = React.createContext();\r\n\r\nfunction AuthProviderContext(props) {\r\n    const [isLogged, setIsLogged] = React.useState(false);\r\n    let history = useHistory();\r\n\r\n    const authTokens = [\"QpwL5tke4Pnpja7X4\"];\r\n\r\n\r\n\r\n    async function requestAuth(email, password) {\r\n        let result;\r\n        await fetch(`https://reqres.in/api/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    \"email\": email,\r\n                    \"password\": password\r\n                }\r\n            )\r\n        })\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    result = false;\r\n                }\r\n                else {\r\n                    result = response.json()\r\n                }\r\n\r\n            })\r\n        return result;\r\n    }\r\n\r\n\r\n    async function signIn(email, password) {\r\n        let didWorked = false;\r\n        await requestAuth(email, password).then((result) => {\r\n            if (result) {\r\n                if (authTokens.includes(result.token)) {\r\n                    didWorked = true;\r\n                    setIsLogged(true);\r\n                    history.push(\"/todo\");\r\n                }\r\n\r\n            }\r\n        })\r\n        return didWorked;\r\n    }\r\n\r\n\r\n    const signOut = () => setIsLogged(false);\r\n\r\n    const value = { isLogged, signIn, signOut }\r\n    return <authContext.Provider value={value}>{props.children}</authContext.Provider>\r\n}\r\n\r\nexport { AuthProviderContext, authContext }","export default __webpack_public_path__ + \"static/media/logout.bdc81afd.png\";","export default __webpack_public_path__ + \"static/media/hover.398217ee.png\";","import React, { useState, useEffect, useContext, useMemo } from \"react\";\r\nimport './App.css';\r\nimport AddTask from \"./conteners/AddTask\";\r\nimport Sort from \"./conteners/Sort\";\r\nimport TaskList from \"./conteners/TaskList\";\r\nimport { TaskListReducerContext } from \"./contexts/taskListReducerContext\";\r\nimport { authContext } from \"./contexts/AuthProviderContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport logoutImage from \"./Images/logout.png\";\r\nimport hoverLogoutImage from \"./Images/hover.png\";\r\n\r\nfunction useFetch(url) {\r\n  const [externalData, setExternalData] = useState([]);\r\n\r\n  useMemo(\r\n    () => {\r\n      let isMounted = false;\r\n\r\n      async function fetchData() {\r\n        let info = await fetch(url);\r\n        let response = await info.json();\r\n        setExternalData(response);\r\n      };\r\n      if (isMounted) {\r\n        fetchData();\r\n      }\r\n      return () => { isMounted = false }\r\n    }, [url]\r\n  )\r\n  return externalData;\r\n}\r\n\r\n\r\n\r\nfunction App(props) {\r\n  let { state, dispatch, storageKey, elementsSizeUnit } = useContext(TaskListReducerContext);\r\n  const { isLogged, signOut } = useContext(authContext);\r\n  let externalData = useFetch(\"https://jsonplaceholder.typicode.com/users/1/todos\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(storageKey, JSON.stringify([...state.tasks]));\r\n  }, [state.tasks, storageKey]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"JOIN_EXTERNAL_DATA\", externalData: externalData })\r\n  }, [externalData, dispatch])\r\n\r\n  const spanStyle = {justifyContent:\"center\",alignItems:\"center\", flex:\"1\", display:\"flex\"};\r\n  const labelStyle = {fontSize:elementsSizeUnit/18,color:\"#1868ae\",whiteSpace:\"nowrap\"};\r\n  if (!isLogged) {\r\n    return (<Redirect to={{ pathname: \"/login\" }} />)\r\n  }\r\n\r\n  return (\r\n    <div className=\"appContainer\" style={{ width: \"100%\",textAlign:\"center\"}}>\r\n      <h1 style={{width:\"100%\", fontSize:elementsSizeUnit/7,textAlign:\"center\",color:\"#1868ae\"}}>ToDo (or not ToDo) List</h1>\r\n      <form style={{ width: \"50%\",  alignItems:\"center\", display:\"flex\", justifyContent:\"center\", marginLeft:\"28%\" }}>\r\n        <span style={spanStyle}>\r\n        <label style={labelStyle}>Add new task:</label> &nbsp;&nbsp;\r\n        <AddTask />\r\n        </span>\r\n        <span style={spanStyle}>\r\n        <label style={labelStyle}>Sorting:</label>&nbsp;&nbsp;\r\n        <Sort />\r\n        </span>\r\n        <span style={{flex:0.5}}>\r\n        <img alt=\"logoutButton\" onMouseOver={e => (e.currentTarget.src = hoverLogoutImage)} onMouseOut={e => (e.currentTarget.src = logoutImage)} style={{ height: elementsSizeUnit / 10}} src={logoutImage} onClick={() => { signOut() }}></img>\r\n        </span>\r\n      </form>\r\n      <span style={{display:\"flex\", justifyContent:\"center\"}}>\r\n      <TaskList />\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/lock.d009ed91.png\";","import { useContext } from \"react\";\r\nimport { authContext } from \"../contexts/AuthProviderContext\";\r\nimport lock from \"../Images/lock.png\";\r\nimport React, { useState } from \"react\";\r\nfunction PublicPage(props) {\r\n    const { signIn } = useContext(authContext);\r\n    const [formInfo, setFormInfo] = useState({ email: \"email\", password: \"password\" })\r\n    const [showError, setShowError] = useState(false)\r\n    let inputStyle = { fontSize: window.innerHeight / 40 };\r\n\r\n    async function submit() {\r\n        await signIn(formInfo.email, formInfo.password).then(\r\n            (result) => {\r\n                if (!result) {\r\n                    setShowError(true)\r\n                }\r\n            }\r\n        )\r\n        // if (!signIn(formInfo.email, formInfo.password)) {\r\n        //     console.log(\"x\")\r\n        //     setShowError(true)\r\n        // }\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", width: \"100%\" }}>\r\n            <h1 style={{ fontSize: window.innerHeight / 20 }}>User login</h1>\r\n            <input style={inputStyle} onFocus={() => { setFormInfo({ ...formInfo, email: \"\" }); setShowError(false) }} value={formInfo.email} onChange={(e) => { setFormInfo({ ...formInfo, email: e.target.value }) }}></input>\r\n            <img alt=\"lockIcon\" style={{ position: \"absolute\", display: \"inline-block\", top: window.innerHeight / 9, height: window.innerHeight / 11 }} src={lock}></img>\r\n            <br />\r\n            <input style={inputStyle} value={formInfo.password} onFocus={() => { setFormInfo({ ...formInfo, password: \"\" }); setShowError(false) }} onChange={(e) => { setFormInfo({ ...formInfo, password: e.target.value }) }}></input>\r\n            {showError && <h2 style={{ fontSize: window.innerHeight / 50, color: \"red\" }}>Wrong email or password.</h2>}\r\n            {!showError && <h2 style={{ fontSize: window.innerHeight / 50 }}>&nbsp;</h2>}\r\n            <button style={{ fontSize: window.innerHeight / 35, background: \"grey\", color: \"white\" }} onClick={() => { submit() }}>Submit</button>\r\n            <br />\r\n            <h2 id=\"hintMessage\" onClick={() => { setFormInfo({ email: \"eve.holt@reqres.in\", password: \"whatever\" }) }} style={{ fontSize: window.innerHeight / 45 }}>Hint: auth server will accept email: \"eve.holt@reqres.in\" and any non-empty string as password (or just click here).</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default PublicPage;","import * as React from 'react';\r\nimport { useParams } from \"react-router-dom\"\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\";\r\n\r\n\r\nfunction ToDo(props) {\r\n    let { state } = React.useContext(TaskListReducerContext);\r\n    const { id } = useParams();\r\n    const taskTitle = state.tasks.find((task) => task.id === id);\r\n    return (\r\n        <div>\r\n            <h2>{taskTitle ? taskTitle.title : \"Task was deleted.\"}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo;","import { useHistory } from \"react-router-dom\";\r\n\r\nfunction ErrorPage() {\r\n    const history = useHistory();\r\n\r\n    function redirectToLoginpage() {\r\n        let path = `/login`;\r\n        history.replace(path);\r\n    }\r\n\r\n    let buttonStyle = { backgroundColor: \"#4CAF50\", color: \"white\", fontSize: window.innerHeight / 20 };\r\n    return (<>\r\n        <h1>It looks like you're lost, m8.</h1>\r\n        <button style={buttonStyle} onClick={redirectToLoginpage}>Take me back.</button>\r\n    </>)\r\n}\r\n\r\nexport default ErrorPage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import AppTest from './AppTest';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { TaskListReducerContextProvider } from \"./contexts/taskListReducerContext\"\r\nimport { AuthProviderContext } from \"./contexts/AuthProviderContext\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport PublicPage from \"./components/PublicPage\";\r\nimport ToDo from \"./components/ToDo\"\r\nimport ErrorPage from \"./components/ErrorPage\"\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter >\r\n      <AuthProviderContext>\r\n        <TaskListReducerContextProvider>\r\n          <Switch>\r\n            <Route path=\"/todo\">\r\n              <App />\r\n            </Route>\r\n            <Route path=\"/todos/:id\">\r\n              <ToDo></ToDo>\r\n            </Route>\r\n            <Route exact path={[\"/login\", \"/\"]}>\r\n              <PublicPage />\r\n            </Route>\r\n            <Route path=\"/*\">\r\n              <ErrorPage />\r\n            </Route>\r\n          </Switch>\r\n        </TaskListReducerContextProvider>\r\n      </AuthProviderContext>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}